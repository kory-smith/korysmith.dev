:root {
  --color-dark: #252525;
  --color-light: #f9f9f9;
  --color-mid: #666;
  --color-mid-glare: #b3b3b3;
  --color-primary: #ffa500; /* Lovely orange */
  --color-primary-shade: #cc7900; /* Even darker shade of orange */
  --color-primary-glare: #ffc266; /* Even lighter shade of orange */
  --color-visited: #551a8b;
  --space-zero: clamp(0rem, -0.02rem + 0.11vw, 0.0625rem);
  --space-2xs: clamp(0.25rem, 0.16rem + 0.43vw, 0.5rem);
  --space-xs: clamp(0.75rem, 0.71rem + 0.22vw, 0.875rem);
  --space-s: clamp(1rem, 0.96rem + 0.22vw, 1.125rem);
  --space-m: clamp(1.5rem, 1.43rem + 0.33vw, 1.6875rem);
  --space-l: clamp(2rem, 1.91rem + 0.43vw, 2.25rem);
  --space-xl: clamp(3rem, 2.87rem + 0.65vw, 3.375rem);
  --space-2xl: clamp(4rem, 3.83rem + 0.87vw, 4.5rem);
  --space-3xl: clamp(5rem, 4.78rem + 1.09vw, 5.625rem);
  --space-4xl: clamp(6rem, 5.74rem + 1.3vw, 6.75rem);
  --space-xs-s: clamp(0.75rem, 0.62rem + 0.65vw, 1.125rem);
  --space-s-m: clamp(1rem, 0.76rem + 1.2vw, 1.6875rem);
  --space-s-l: clamp(1rem, 0.57rem + 2.17vw, 2.25rem);
  --space-m-l: clamp(1.5rem, 1.24rem + 1.3vw, 2.25rem);
  --space-l-xl: clamp(2rem, 1.52rem + 2.39vw, 3.375rem);
  --space-xl-2xl: clamp(3rem, 2.48rem + 2.61vw, 4.5rem);
  --space-2xl-3xl: clamp(4rem, 3.43rem + 2.83vw, 5.625rem);
  --space-3xl-4xl: clamp(5rem, 4.39rem + 3.04vw, 6.75rem);
  --size-base: clamp(1rem, 0.96rem + 0.22vw, 1.125rem);
  --size-step-0: clamp(0.8125rem, 0.79rem + 0.11vw, 0.875rem);
  --size-step-1: clamp(1.1875rem, 1.12rem + 0.33vw, 1.375rem);
  --size-step-2: clamp(1.4375rem, 1.33rem + 0.54vw, 1.75rem);
  --size-step-3: clamp(1.6875rem, 1.51rem + 0.87vw, 2.1875rem);
  --size-step-4: clamp(2.0625rem, 1.85rem + 1.09vw, 2.6875rem);
  /* https://github.com/system-fonts/modern-font-stacks#neo-grotesque */
  --font-base: Inter, Roboto, "Helvetica Neue", "Arial Nova", "Nimbus Sans",
    Arial, sans-serif;
  --gutter: var(--space-s-m);
  --border-radius: 0.75rem;
  --border-radius-inner: 0.5rem;
  --transition-base: 250ms ease;
  --transition-movement: 200ms linear;
  --transition-fade: 200ms ease;
  --transition-bounce: 500ms cubic-bezier(0.5, 0.05, 0.2, 1.5);
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    /* Set my default font  */
    font-family: var(--font-base);
    background-color: #f9f9f9;
  }
}

blockquote,
body,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
p {
  margin: 0;
}
ol[role="list"],
ul[role="list"] {
  list-style: none;
}

ol {
  list-style: decimal;
}

html {
  text-size-adjust: none;
  -webkit-text-size-adjust: none;
  /* Prevent CLS when the scrollbar goes in and out of view */
  scrollbar-gutter: stable both-edges;
}
html:focus-within {
  scroll-behavior: smooth;
}
body {
  line-height: 1.5;
  min-height: 100vh;
  text-rendering: optimizeSpeed;
}
a:not([class]) {
  text-decoration-skip-ink: auto;
}
img,
picture {
  display: block;
  max-width: 100%;
}
button,
input,
select,
textarea {
  font: inherit;
}

body {
  background: var(--color-light);
  color: var(--color-dark);
  display: flex;
  flex-direction: column;
  font-family: var(--font-base);
  font-size: var(--size-base);
  font-weight: 400;
  line-height: 1.6;
}

main {
  flex: auto;
}

h1 {
  font-size: var(--size-step-3);
}

h2 {
  font-size: var(--size-step-2);
}

h3 {
  font-size: var(--size-step-1);
  line-height: 1.2;
}

:is(h1, h2, h3) {
  display: flex;
  font-weight: 700;
  gap: 1ch;
  line-height: 1.2;
}

:is(h1, h2, h3):before {
  color: var(--color-mid);
}

a {
  color: currentColor;
  text-decoration: underline;
  text-decoration-color: var(--color-primary);
  text-decoration-thickness: 2px;
  text-underline-offset: 0.2ex;
}

a:visited {
  text-decoration-color: var(--color-visited);
}

[class*="bg-primary"] a {
  text-decoration-color: var(--color-dark);
}

a:hover {
  text-underline-offset: 0.1ex;
}

time {
  display: block;
  font-style: italic;
}

blockquote,
dl,
figcaption,
li,
p {
  max-width: 65ch;
}

figcaption {
  color: var(--color-mid);
  font-size: 0.8em;
  font-style: italic;
  margin-block-start: 0.5em;
  max-width: unset;
  text-align: center;
}

blockquote {
  border-inline-start: 0.2em solid;
  border-color: var(--color-primary);
  font-style: italic;
  padding-inline-start: 1em;
}

svg {
  height: 1em;
  width: 1em;
}

img {
  height: auto;
}

img[src*=".svg"] {
  width: 100%;
}

[role="list"] {
  margin-bottom: 0;
  padding: 0;
}

[id] {
  scroll-margin-top: 2ex;
}

hr {
  border: none;
  border-top: 1px solid var(--color-mid);
  margin: var(--space-l-xl) 0 !important;
  max-width: 55rem;
  transform: translateY(-1px);
}

:focus-visible {
  outline: 1px dotted var(--color-dark);
  outline-offset: 0.25rem;
}

main:focus {
  outline: none;
}

code {
  word-wrap: normal;
  box-decoration-break: clone;
  -webkit-box-decoration-break: clone;
  font-size: 1em;
  hyphens: none;
  tab-size: 2;
  text-align: left;
  word-break: normal;
  word-spacing: normal;
  background-color: #e8e8e8;
  padding: 2px 4px;
  border-radius: 0.25rem;
  border: 1px solid #a8a8a8;
}

/* Let shiki do whatever it wants  */
pre.shiki * {
  word-wrap: initial;
  box-decoration-break: initial;
  -webkit-box-decoration-break: initial;
  font-size: initial;
  hyphens: initial;
  tab-size: initial;
  text-align: initial;
  word-break: initial;
  word-spacing: initial;
  background-color: initial;
  padding: initial;
  border-radius: initial;
  border: initial;
}

pre {
  -webkit-overflow-scrolling: touch;
  background: var(--color-dark);
  overflow-x: auto;
  padding: var(--space-xs);
}

pre code {
  color: var(--color-light);
}

summary {
  align-items: baseline;
  cursor: pointer;
  display: flex;
  gap: 0 1ch;
  line-height: 1.2;
  list-style: none;
}

summary:focus-visible,
summary:hover {
  color: var(--color-primary-shade);
}

summary:before {
  color: var(--color-primary);
  content: "+";
  display: block;
  line-height: 0.5;
  margin-inline-start: -2ch;
  transform: scale(1.4);
  transform-origin: right bottom;
}

[open] summary:before {
  content: "â€”";
}

summary::-webkit-details-marker,
summary::marker {
  content: "";
  display: none;
}

label:after {
  content: "\A";
  white-space: pre;
}

:is(input:not([type="checkbox"]):not([type="radio"]), textarea) {
  background: 0 0;
  border: 1px solid var(--color-mid);
  font: inherit;
  padding: 0.3em;
  width: 100%;
}

textarea {
  display: block;
}

textarea:not([rows]) {
  min-height: 20rem;
}

button {
  background: var(--color-primary-glare);
  border: 1px solid var(--color-mid);
  cursor: pointer;
  display: inline-block;
  font: inherit;
  font-weight: 700;
  padding: 0.3em 1em;
}

button:hover {
  background: var(--color-mid-glare);
}

last-fm p {
  max-width: 30ch;
}

::selection {
  background: var(--color-dark);
  color: var(--color-light);
}

.comments,
.comments__list[role="list"] {
  --flow-space: var(--space-l-xl);
}

.comments [role="list"] {
  padding: 0;
}

.comments__item {
  align-items: flex-start;
  display: flex;
  gap: var(--space-m);
}

.comments__item img {
  object-size: cover;
  aspect-ratio: 1;
  border-radius: 50px;
  flex-shrink: 0;
  width: 50px;
}

.comments h2 + h3 {
  --flow-space: var(--space-xl);
}

.comments__list[role="list"] li + li {
  margin-top: var(--space-l);
}

.comments label {
  font-weight: 700;
}

.comments__likes {
  --gutter: var(--space-2xs);
}

.prose .comments__likes li::marker {
  content: "";
}

.prose .comments__likes li + li {
  margin: 0;
}

.comments__likes img {
  background: var(--color-mid-glare);
  border-radius: 35px;
  height: 35px;
  object-fit: cover;
  width: 35px;
}

.comments__list .comments__list {
  margin: var(--space-l) 0 0 var(--space-m-l);
}

.comments .sidebar {
  --sidebar-target-width: max-content;
  --gutter: var(--space-xs);
}

.comments .sidebar .comments__likes {
  margin: 0;
}

.comments .sidebar h3 {
  font-weight: 400;
  transform: translateY(0.5ex);
}

.comments .sidebar h3:before {
  display: none;
}

code[class*="language-"],
pre[class*="language-"] {
  word-wrap: normal;
  color: #ccc;
  font-weight: 400;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
  line-height: 1.5;
  tab-size: 2;
  text-align: left;
  white-space: pre;
  word-break: normal;
  word-spacing: normal;
}

pre[class*="language-"] {
  overflow: auto;
  padding: 1em;
}

:not(pre) > code[class*="language-"] {
  border-radius: 0.3em;
  padding: 0.1em;
  white-space: normal;
}

.token.block-comment,
.token.cdata,
.token.comment,
.token.doctype,
.token.prolog {
  color: #999;
}

.token.punctuation {
  color: #ccc;
}

.token.attr-name,
.token.deleted,
.token.namespace,
.token.tag {
  color: #e2777a;
}

.token.function-name {
  color: #6196cc;
}

.token.boolean,
.token.function,
.token.number {
  color: #f08d49;
}

.token.class-name,
.token.constant,
.token.property,
.token.symbol {
  color: #f8c555;
}

.token.atrule,
.token.builtin,
.token.important,
.token.keyword,
.token.selector {
  color: var(--color-primary-glare);
}

.token.attr-value,
.token.char,
.token.regex,
.token.string,
.token.variable {
  color: #7ec699;
}

.token.entity,
.token.operator,
.token.url {
  color: #67cdcc;
}

.token.bold,
.token.important {
  font-weight: 700;
}

.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

.token.inserted {
  color: green;
}

.prose {
  --flow-space: var(--space-m-l);
  line-height: 1.8;
  max-width: 50rem;
}

.prose > img,
.prose > table {
  width: 100%;
}

.prose figure img {
  border: 1px dashed var(--color-mid);
  margin-inline: auto;
}

.prose ul li::marker {
  color: var(--color-mid);
  content: "- ";
  font-weight: 700;
}

/* ::marker can't be used to add content in Safari https://bugs.webkit.org/show_bug.cgi?id=204163  */
.prose ul li {
  list-style-type: "- ";
}

.prose :is(ol, ul) {
  padding-inline-start: 1.85em;
}

.prose ol li::marker {
  color: var(--color-mid);
}

.prose li + li {
  margin-top: var(--space-s);
}

.prose :is(pre, pre + *, figure, figure + *, h2, h3, h4) {
  --flow-space: var(--space-l-xl);
}

.prose h1 + * {
  --flow-space: 0.5em;
}

.prose :is(h2 + *, h3 + *, h4 + *) {
  --flow-space: var(--space-s);
}

.prose iframe:not([id*="cp_embed"]) {
  aspect-ratio: 16/9;
  height: unset;
  width: 100%;
}

.prose :is(.wp-block-cp-codepen-gutenberg-embed-block, pre, .wp-block-image) {
  margin-left: 50%;
  max-width: 60rem;
  transform: translateX(-50%);
  width: 100vw;
}

@media (max-width: 49em) {
  .prose a,
  .prose > * {
    word-wrap: break-word;
    hyphens: auto;
    overflow-wrap: break-word;
    word-break: break-word;
  }
}

.site-header {
  --gutter: 0.5rem var(--space-m);
  padding-block: var(--space-m);
}

.site-header nav ul {
  margin: 0;
}

.site-header__brand {
  color: var(--color-mid);
  display: inline-block;
  font-size: 2.5rem;
  height: 2.5rem;
}

.cluster {
  align-items: var(--cluster-vertical-alignment, center);
  display: flex;
  flex-wrap: wrap;
  justify-content: var(--cluster-horizontal-alignment, flex-start);
}

.cluster,
.grid {
  gap: var(--gutter, var(--space-s-l));
}

.grid {
  display: grid;
  grid-template-columns: repeat(
    var(--grid-placement, auto-fill),
    minmax(var(--grid-min-item-size, 14rem), 1fr)
  );
}

.grid[data-fit="auto-fit"] {
  --grid-placement: auto-fit;
}

.grid[data-rows="masonry"] {
  align-items: start;
  grid-template-rows: masonry;
}

.reel {
  --reel-space: 2rem;
  -webkit-overflow-scrolling: touch;
  display: flex;
  height: auto;
  margin-inline: auto;
  max-width: 100%;
  overflow-x: auto;
  padding: 0.5rem;
}

.reel > * {
  flex-basis: var(--reel-item-width, calc(33.333% - var(--reel-space)));
  flex-shrink: 0;
}

.reel > * + * {
  margin-inline-start: var(--reel-space);
}

.reel[data-scroll="snap"] {
  scroll-snap-type: x mandatory;
}

.reel[data-scroll="snap"] > * {
  scroll-snap-align: start;
}

.repel {
  align-items: var(--repel-vertical-alignment, center);
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--space-s-l));
  justify-content: space-between;
}

.repel[data-nowrap] {
  flex-wrap: nowrap;
}

.sidebar {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--space-s-l));
}

.sidebar:not([data-direction]) > :first-child {
  flex-basis: var(--sidebar-target-width, 20rem);
  flex-grow: 1;
}

.sidebar:not([data-direction]) > :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: var(--sidebar-content-min-width, 50%);
}

.sidebar[data-direction="rtl"] > :last-child {
  flex-basis: var(--sidebar-target-width, 20rem);
  flex-grow: 1;
}

.sidebar[data-direction="rtl"] > :first-child {
  flex-basis: 0;
  flex-grow: 999;
  min-width: var(--sidebar-content-min-width, 50%);
}

.switcher {
  align-items: var(--switcher-vertical-alignment, flex-start);
  display: flex;
  flex-wrap: wrap;
  gap: var(--gutter, var(--space-s-l));
}

.switcher > * {
  flex-basis: calc(
    (var(--switcher-target-container-width, 40rem) - 100%) * 999
  );
  flex-grow: 1;
}

.switcher > :nth-last-child(n + 3),
.switcher > :nth-last-child(n + 3) ~ * {
  flex-basis: 100%;
}

.flow > * + * {
  margin-top: var(--flow-space, 1em);
}

.region {
  padding-block: var(--region-space, var(--space-l-xl));
}

.visually-hidden {
  clip: rect(0 0 0 0);
  border: 0;
  height: 0;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.wrapper {
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--gutter);
  padding-right: var(--gutter);
  position: relative;
  width: clamp(16rem, 93vw, 75rem);
}

.static {
  position: static;
}

.mt-s {
  margin-top: clamp(1rem, 0.96rem + 0.22vw, 1.125rem);
}

.mt-l-xl {
  margin-top: clamp(2rem, 1.52rem + 2.39vw, 3.375rem);
}

.hidden {
  display: none;
}

.resize {
  resize: both;
}

.items-end {
  align-items: flex-end;
}

.bg-primary-glare {
  --tw-bg-opacity: 1;
  background-color: rgb(131 199 234 / var(--tw-bg-opacity));
}

.p-m {
  padding: clamp(1.5rem, 1.43rem + 0.33vw, 1.6875rem);
}

.pt-s {
  padding-top: clamp(1rem, 0.96rem + 0.22vw, 1.125rem);
}

.pb-m {
  padding-bottom: clamp(1.5rem, 1.43rem + 0.33vw, 1.6875rem);
}

.text-base {
  font-size: clamp(1rem, 0.96rem + 0.22vw, 1.125rem);
}

.text-step-0 {
  font-size: clamp(0.8125rem, 0.79rem + 0.11vw, 0.875rem);
}

.italic {
  font-style: italic;
}

.underline {
  text-decoration-line: underline;
}

.flow-space-m {
  --flow-space: clamp(1.5rem, 1.43rem + 0.33vw, 1.6875rem);
}

.flow-space-2xl {
  --flow-space: clamp(4rem, 3.83rem + 0.87vw, 4.5rem);
}

.flow-space-s-m {
  --flow-space: clamp(1rem, 0.76rem + 1.2vw, 1.6875rem);
}

.flow-space-xl-2xl {
  --flow-space: clamp(3rem, 2.48rem + 2.61vw, 4.5rem);
}
